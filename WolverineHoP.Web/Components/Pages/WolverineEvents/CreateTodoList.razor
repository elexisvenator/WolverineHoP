@page "/wolverine-events/todo-list/create"
@using System.ComponentModel.DataAnnotations
@using WolverineHoP.Web.Api.WolverineEvents
@rendermode InteractiveServer
@attribute [StreamRendering(true)]

@inject WolverineEventsApiClient Api
@inject NavigationManager NavManager

<PageTitle>Todo list (wolverine-events): Create</PageTitle>

<h1>Create Todo list</h1>

<div class="input-group mb-3">
    <span class="input-group-text" id="tenant-label">Tenant</span>
    <input type="number" class="form-control" id="tenant" aria-describedby="tenant-label" @bind="Tenant" style="max-width: 120px;" min="1" max="2180">
    <button class="btn btn-outline-secondary" type="button" @onclick="ChangeTenant">Apply</button>
</div>

<EditForm FormName="CreateTodoListsForm" Model="Model" OnValidSubmit="Submit">
    <div class="form-group row mb-4">
        <div class="col-sm-2"></div>
        <div class="col-sm-10">
            <DataAnnotationsValidator/>
            <CustomValidation @ref="customValidation"/>
            <ValidationSummary/>
        </div>
    </div>
    <div class="form-group row mb-4">
        <label @bind="Model!.Title" class="col-sm-2 col-form-label">Title</label>
        <div class="col-sm-10">
            <InputText @bind-Value="Model!.Title" class="form-control"/>
        </div>
    </div>
    <div class="form-group row mb-4">
        <div class="col-sm-2"></div>
        <div class="col-sm-10">
            <button class="btn btn-primary" type="submit">Create</button>
        </div>
    </div>
</EditForm>

@code {

    [SupplyParameterFromQuery(Name = "tenant")]
    public int? Tenant { get => _tenant; set => _tenant = value ?? 100; }

    private int _tenant = 100;

    private void ChangeTenant()
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameter("tenant", _tenant));
    }

    private CustomValidation? customValidation;

    [SupplyParameterFromForm]
    public NewListModel? Model { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private async Task Submit()
    {
        customValidation?.ClearErrors();

        var response = await Api.CreateTodoList(Model!.Title!, Tenant);
        if (response.TryPickT0(out var todoListId, out var errors))
        {
            NavManager.NavigateTo($"/wolverine-events/todo-list/{todoListId}?tenant={Tenant}");
        }
        else
        {
            customValidation?.DisplayErrors(errors);
        }
    }

    public class NewListModel
    {
        [Required(AllowEmptyStrings = false)]
        public string? Title { get; set; }
    }
}
